// Generated from runa/RunaLexer.g4 by ANTLR 4.13.2
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,21,241,6,-1,6,-1,6,-1,6,-1,2,0,7,0,2,1,7,1,2,
2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,
2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,
18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,
7,25,2,26,7,26,2,27,7,27,2,28,7,28,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,
0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,
6,1,6,1,7,1,7,1,8,1,8,1,8,3,8,97,8,8,1,9,4,9,100,8,9,11,9,12,9,101,1,10,
5,10,105,8,10,10,10,12,10,108,9,10,1,10,1,10,4,10,112,8,10,11,10,12,10,113,
1,11,1,11,3,11,118,8,11,1,12,5,12,121,8,12,10,12,12,12,124,9,12,1,12,1,12,
1,12,1,12,5,12,130,8,12,10,12,12,12,133,9,12,1,12,1,12,3,12,137,8,12,1,12,
1,12,1,13,5,13,142,8,13,10,13,12,13,145,9,13,1,13,3,13,148,8,13,1,13,1,13,
4,13,152,8,13,11,13,12,13,153,1,13,1,13,1,14,4,14,159,8,14,11,14,12,14,160,
1,14,1,14,1,15,4,15,166,8,15,11,15,12,15,167,1,16,1,16,5,16,172,8,16,10,
16,12,16,175,9,16,1,17,4,17,178,8,17,11,17,12,17,179,1,17,1,17,1,18,1,18,
1,18,1,18,1,19,1,19,1,19,1,20,4,20,192,8,20,11,20,12,20,193,1,20,1,20,1,
21,1,21,1,21,1,21,1,22,4,22,203,8,22,11,22,12,22,204,1,22,1,22,1,22,3,22,
210,8,22,1,23,1,23,1,23,4,23,215,8,23,11,23,12,23,216,1,23,1,23,1,24,1,24,
5,24,223,8,24,10,24,12,24,226,9,24,1,25,1,25,4,25,230,8,25,11,25,12,25,231,
1,26,1,26,1,27,1,27,1,28,1,28,1,28,1,28,0,0,29,4,1,6,2,8,3,10,4,12,5,14,
0,16,0,18,0,20,0,22,0,24,0,26,6,28,7,30,8,32,0,34,9,36,10,38,11,40,12,42,
13,44,14,46,15,48,0,50,16,52,17,54,18,56,19,58,20,60,21,4,0,1,2,3,6,2,0,
65,90,97,122,1,0,48,57,2,0,9,9,32,32,2,0,10,10,13,13,10,0,10,10,13,13,32,
32,47,47,58,58,60,60,62,62,64,64,123,123,125,125,5,0,45,45,48,57,65,90,95,
95,97,122,255,0,4,1,0,0,0,0,6,1,0,0,0,0,8,1,0,0,0,0,10,1,0,0,0,0,12,1,0,
0,0,0,26,1,0,0,0,0,28,1,0,0,0,0,30,1,0,0,0,0,32,1,0,0,0,0,34,1,0,0,0,1,36,
1,0,0,0,1,38,1,0,0,0,1,40,1,0,0,0,2,42,1,0,0,0,2,44,1,0,0,0,2,46,1,0,0,0,
2,50,1,0,0,0,2,52,1,0,0,0,3,54,1,0,0,0,3,56,1,0,0,0,3,58,1,0,0,0,3,60,1,
0,0,0,4,62,1,0,0,0,6,72,1,0,0,0,8,79,1,0,0,0,10,83,1,0,0,0,12,85,1,0,0,0,
14,87,1,0,0,0,16,89,1,0,0,0,18,91,1,0,0,0,20,96,1,0,0,0,22,99,1,0,0,0,24,
106,1,0,0,0,26,117,1,0,0,0,28,122,1,0,0,0,30,143,1,0,0,0,32,158,1,0,0,0,
34,165,1,0,0,0,36,169,1,0,0,0,38,177,1,0,0,0,40,183,1,0,0,0,42,187,1,0,0,
0,44,191,1,0,0,0,46,197,1,0,0,0,48,209,1,0,0,0,50,214,1,0,0,0,52,220,1,0,
0,0,54,229,1,0,0,0,56,233,1,0,0,0,58,235,1,0,0,0,60,237,1,0,0,0,62,63,5,
64,0,0,63,64,5,105,0,0,64,65,5,109,0,0,65,66,5,112,0,0,66,67,5,111,0,0,67,
68,5,114,0,0,68,69,5,116,0,0,69,70,1,0,0,0,70,71,6,0,0,0,71,5,1,0,0,0,72,
73,5,108,0,0,73,74,5,111,0,0,74,75,5,114,0,0,75,76,5,97,0,0,76,77,1,0,0,
0,77,78,6,1,1,0,78,7,1,0,0,0,79,80,5,123,0,0,80,81,1,0,0,0,81,82,6,2,2,0,
82,9,1,0,0,0,83,84,5,58,0,0,84,11,1,0,0,0,85,86,5,60,0,0,86,13,1,0,0,0,87,
88,7,0,0,0,88,15,1,0,0,0,89,90,7,1,0,0,90,17,1,0,0,0,91,92,7,2,0,0,92,19,
1,0,0,0,93,97,3,14,5,0,94,97,3,16,6,0,95,97,5,95,0,0,96,93,1,0,0,0,96,94,
1,0,0,0,96,95,1,0,0,0,97,21,1,0,0,0,98,100,3,16,6,0,99,98,1,0,0,0,100,101,
1,0,0,0,101,99,1,0,0,0,101,102,1,0,0,0,102,23,1,0,0,0,103,105,3,16,6,0,104,
103,1,0,0,0,105,108,1,0,0,0,106,104,1,0,0,0,106,107,1,0,0,0,107,109,1,0,
0,0,108,106,1,0,0,0,109,111,5,46,0,0,110,112,3,16,6,0,111,110,1,0,0,0,112,
113,1,0,0,0,113,111,1,0,0,0,113,114,1,0,0,0,114,25,1,0,0,0,115,118,3,22,
9,0,116,118,3,24,10,0,117,115,1,0,0,0,117,116,1,0,0,0,118,27,1,0,0,0,119,
121,3,18,7,0,120,119,1,0,0,0,121,124,1,0,0,0,122,120,1,0,0,0,122,123,1,0,
0,0,123,125,1,0,0,0,124,122,1,0,0,0,125,126,5,47,0,0,126,127,5,47,0,0,127,
131,1,0,0,0,128,130,8,3,0,0,129,128,1,0,0,0,130,133,1,0,0,0,131,129,1,0,
0,0,131,132,1,0,0,0,132,136,1,0,0,0,133,131,1,0,0,0,134,137,3,30,13,0,135,
137,5,0,0,1,136,134,1,0,0,0,136,135,1,0,0,0,137,138,1,0,0,0,138,139,6,12,
3,0,139,29,1,0,0,0,140,142,3,18,7,0,141,140,1,0,0,0,142,145,1,0,0,0,143,
141,1,0,0,0,143,144,1,0,0,0,144,151,1,0,0,0,145,143,1,0,0,0,146,148,5,13,
0,0,147,146,1,0,0,0,147,148,1,0,0,0,148,149,1,0,0,0,149,152,5,10,0,0,150,
152,5,13,0,0,151,147,1,0,0,0,151,150,1,0,0,0,152,153,1,0,0,0,153,151,1,0,
0,0,153,154,1,0,0,0,154,155,1,0,0,0,155,156,6,13,3,0,156,31,1,0,0,0,157,
159,3,18,7,0,158,157,1,0,0,0,159,160,1,0,0,0,160,158,1,0,0,0,160,161,1,0,
0,0,161,162,1,0,0,0,162,163,6,14,4,0,163,33,1,0,0,0,164,166,8,4,0,0,165,
164,1,0,0,0,166,167,1,0,0,0,167,165,1,0,0,0,167,168,1,0,0,0,168,35,1,0,0,
0,169,173,3,14,5,0,170,172,3,20,8,0,171,170,1,0,0,0,172,175,1,0,0,0,173,
171,1,0,0,0,173,174,1,0,0,0,174,37,1,0,0,0,175,173,1,0,0,0,176,178,3,18,
7,0,177,176,1,0,0,0,178,179,1,0,0,0,179,177,1,0,0,0,179,180,1,0,0,0,180,
181,1,0,0,0,181,182,6,17,3,0,182,39,1,0,0,0,183,184,5,125,0,0,184,185,1,
0,0,0,185,186,6,18,5,0,186,41,1,0,0,0,187,188,5,97,0,0,188,189,5,115,0,0,
189,43,1,0,0,0,190,192,7,2,0,0,191,190,1,0,0,0,192,193,1,0,0,0,193,191,1,
0,0,0,193,194,1,0,0,0,194,195,1,0,0,0,195,196,6,20,3,0,196,45,1,0,0,0,197,
198,3,30,13,0,198,199,1,0,0,0,199,200,6,21,5,0,200,47,1,0,0,0,201,203,7,
5,0,0,202,201,1,0,0,0,203,204,1,0,0,0,204,202,1,0,0,0,204,205,1,0,0,0,205,
210,1,0,0,0,206,210,5,46,0,0,207,208,5,46,0,0,208,210,5,46,0,0,209,202,1,
0,0,0,209,206,1,0,0,0,209,207,1,0,0,0,210,49,1,0,0,0,211,212,3,48,22,0,212,
213,5,47,0,0,213,215,1,0,0,0,214,211,1,0,0,0,215,216,1,0,0,0,216,214,1,0,
0,0,216,217,1,0,0,0,217,218,1,0,0,0,218,219,3,48,22,0,219,51,1,0,0,0,220,
224,3,14,5,0,221,223,3,20,8,0,222,221,1,0,0,0,223,226,1,0,0,0,224,222,1,
0,0,0,224,225,1,0,0,0,225,53,1,0,0,0,226,224,1,0,0,0,227,230,3,20,8,0,228,
230,5,45,0,0,229,227,1,0,0,0,229,228,1,0,0,0,230,231,1,0,0,0,231,229,1,0,
0,0,231,232,1,0,0,0,232,55,1,0,0,0,233,234,5,58,0,0,234,57,1,0,0,0,235,236,
3,26,11,0,236,59,1,0,0,0,237,238,5,62,0,0,238,239,1,0,0,0,239,240,6,28,5,
0,240,61,1,0,0,0,27,0,1,2,3,96,101,106,113,117,122,131,136,143,147,151,153,
160,167,173,179,193,204,209,216,224,229,231,6,5,2,0,5,3,0,5,1,0,6,0,0,7,
9,0,4,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class RunaLexer extends antlr4.Lexer {

    static grammarFileName = "RunaLexer.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE", "VARIABLE", "IMPORT_MODE", "LORA_MODE" ];
	static literalNames = [ null, "'@import'", "'lora'", "'{'", null, "'<'", 
                         null, null, null, null, null, null, "'}'", "'as'", 
                         null, null, null, null, null, null, null, "'>'" ];
	static symbolicNames = [ null, "IMPORT", "LORA", "LBRACE", "COLON", "LANGLE", 
                          "NUMBER", "COMMENT", "NEWLINE", "TEXT", "VAR_IDENTIFIER", 
                          "VAR_WS", "RBRACE", "IMPORT_AS", "IMPORT_WS", 
                          "IMPORT_NEWLINE", "IMPORT_PATH", "IMPORT_IDENTIFIER", 
                          "LORA_IDENTIFIER", "LORA_COLON", "LORA_NUMBER", 
                          "RANGLE" ];
	static ruleNames = [ "IMPORT", "LORA", "LBRACE", "COLON", "LANGLE", "LETTER", 
                      "DIGIT", "WHITESPACE", "IDENTIFIER_CHAR", "INTEGER", 
                      "FLOAT", "NUMBER", "COMMENT", "NEWLINE", "WS", "TEXT", 
                      "VAR_IDENTIFIER", "VAR_WS", "RBRACE", "IMPORT_AS", 
                      "IMPORT_WS", "IMPORT_NEWLINE", "IMPORT_PATH_PART", 
                      "IMPORT_PATH", "IMPORT_IDENTIFIER", "LORA_IDENTIFIER", 
                      "LORA_COLON", "LORA_NUMBER", "RANGLE" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

RunaLexer.EOF = antlr4.Token.EOF;
RunaLexer.IMPORT = 1;
RunaLexer.LORA = 2;
RunaLexer.LBRACE = 3;
RunaLexer.COLON = 4;
RunaLexer.LANGLE = 5;
RunaLexer.NUMBER = 6;
RunaLexer.COMMENT = 7;
RunaLexer.NEWLINE = 8;
RunaLexer.TEXT = 9;
RunaLexer.VAR_IDENTIFIER = 10;
RunaLexer.VAR_WS = 11;
RunaLexer.RBRACE = 12;
RunaLexer.IMPORT_AS = 13;
RunaLexer.IMPORT_WS = 14;
RunaLexer.IMPORT_NEWLINE = 15;
RunaLexer.IMPORT_PATH = 16;
RunaLexer.IMPORT_IDENTIFIER = 17;
RunaLexer.LORA_IDENTIFIER = 18;
RunaLexer.LORA_COLON = 19;
RunaLexer.LORA_NUMBER = 20;
RunaLexer.RANGLE = 21;

RunaLexer.VARIABLE = 1;
RunaLexer.IMPORT_MODE = 2;
RunaLexer.LORA_MODE = 3;




