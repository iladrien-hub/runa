// Generated from runa/RunaLexer.g4 by ANTLR 4.13.2
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,15,174,6,-1,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,
2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,
11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,
2,19,7,19,2,20,7,20,2,21,7,21,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,
1,1,1,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,7,3,7,75,
8,7,1,8,4,8,78,8,8,11,8,12,8,79,1,9,5,9,83,8,9,10,9,12,9,86,9,9,1,9,1,9,
4,9,90,8,9,11,9,12,9,91,1,10,1,10,3,10,96,8,10,1,11,3,11,99,8,11,1,11,1,
11,4,11,103,8,11,11,11,12,11,104,1,12,4,12,108,8,12,11,12,12,12,109,1,12,
1,12,1,13,4,13,115,8,13,11,13,12,13,116,1,14,1,14,5,14,121,8,14,10,14,12,
14,124,9,14,1,14,1,14,1,15,4,15,129,8,15,11,15,12,15,130,1,15,1,15,1,16,
1,16,1,16,1,17,4,17,139,8,17,11,17,12,17,140,1,17,1,17,1,18,1,18,1,18,1,
18,1,19,4,19,150,8,19,11,19,12,19,151,1,19,1,19,1,19,3,19,157,8,19,1,20,
1,20,1,20,4,20,162,8,20,11,20,12,20,163,1,20,1,20,1,21,1,21,5,21,170,8,21,
10,21,12,21,173,9,21,0,0,22,3,1,5,2,7,3,9,4,11,0,13,0,15,0,17,0,19,0,21,
0,23,5,25,6,27,7,29,8,31,9,33,10,35,11,37,12,39,13,41,0,43,14,45,15,3,0,
1,2,5,2,0,65,90,97,122,1,0,48,57,2,0,9,9,32,32,6,0,10,10,13,13,58,58,64,
64,123,123,125,125,5,0,45,45,48,57,65,90,95,95,97,122,183,0,3,1,0,0,0,0,
5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,
0,29,1,0,0,0,1,31,1,0,0,0,1,33,1,0,0,0,2,35,1,0,0,0,2,37,1,0,0,0,2,39,1,
0,0,0,2,43,1,0,0,0,2,45,1,0,0,0,3,47,1,0,0,0,5,57,1,0,0,0,7,61,1,0,0,0,9,
63,1,0,0,0,11,65,1,0,0,0,13,67,1,0,0,0,15,69,1,0,0,0,17,74,1,0,0,0,19,77,
1,0,0,0,21,84,1,0,0,0,23,95,1,0,0,0,25,102,1,0,0,0,27,107,1,0,0,0,29,114,
1,0,0,0,31,118,1,0,0,0,33,128,1,0,0,0,35,134,1,0,0,0,37,138,1,0,0,0,39,144,
1,0,0,0,41,156,1,0,0,0,43,161,1,0,0,0,45,167,1,0,0,0,47,48,5,64,0,0,48,49,
5,105,0,0,49,50,5,109,0,0,50,51,5,112,0,0,51,52,5,111,0,0,52,53,5,114,0,
0,53,54,5,116,0,0,54,55,1,0,0,0,55,56,6,0,0,0,56,4,1,0,0,0,57,58,5,123,0,
0,58,59,1,0,0,0,59,60,6,1,1,0,60,6,1,0,0,0,61,62,5,125,0,0,62,8,1,0,0,0,
63,64,5,58,0,0,64,10,1,0,0,0,65,66,7,0,0,0,66,12,1,0,0,0,67,68,7,1,0,0,68,
14,1,0,0,0,69,70,7,2,0,0,70,16,1,0,0,0,71,75,3,11,4,0,72,75,3,13,5,0,73,
75,5,95,0,0,74,71,1,0,0,0,74,72,1,0,0,0,74,73,1,0,0,0,75,18,1,0,0,0,76,78,
3,13,5,0,77,76,1,0,0,0,78,79,1,0,0,0,79,77,1,0,0,0,79,80,1,0,0,0,80,20,1,
0,0,0,81,83,3,13,5,0,82,81,1,0,0,0,83,86,1,0,0,0,84,82,1,0,0,0,84,85,1,0,
0,0,85,87,1,0,0,0,86,84,1,0,0,0,87,89,5,46,0,0,88,90,3,13,5,0,89,88,1,0,
0,0,90,91,1,0,0,0,91,89,1,0,0,0,91,92,1,0,0,0,92,22,1,0,0,0,93,96,3,19,8,
0,94,96,3,21,9,0,95,93,1,0,0,0,95,94,1,0,0,0,96,24,1,0,0,0,97,99,5,13,0,
0,98,97,1,0,0,0,98,99,1,0,0,0,99,100,1,0,0,0,100,103,5,10,0,0,101,103,5,
13,0,0,102,98,1,0,0,0,102,101,1,0,0,0,103,104,1,0,0,0,104,102,1,0,0,0,104,
105,1,0,0,0,105,26,1,0,0,0,106,108,7,2,0,0,107,106,1,0,0,0,108,109,1,0,0,
0,109,107,1,0,0,0,109,110,1,0,0,0,110,111,1,0,0,0,111,112,6,12,2,0,112,28,
1,0,0,0,113,115,8,3,0,0,114,113,1,0,0,0,115,116,1,0,0,0,116,114,1,0,0,0,
116,117,1,0,0,0,117,30,1,0,0,0,118,122,3,11,4,0,119,121,3,17,7,0,120,119,
1,0,0,0,121,124,1,0,0,0,122,120,1,0,0,0,122,123,1,0,0,0,123,125,1,0,0,0,
124,122,1,0,0,0,125,126,6,14,3,0,126,32,1,0,0,0,127,129,7,2,0,0,128,127,
1,0,0,0,129,130,1,0,0,0,130,128,1,0,0,0,130,131,1,0,0,0,131,132,1,0,0,0,
132,133,6,15,2,0,133,34,1,0,0,0,134,135,5,97,0,0,135,136,5,115,0,0,136,36,
1,0,0,0,137,139,7,2,0,0,138,137,1,0,0,0,139,140,1,0,0,0,140,138,1,0,0,0,
140,141,1,0,0,0,141,142,1,0,0,0,142,143,6,17,2,0,143,38,1,0,0,0,144,145,
3,25,11,0,145,146,1,0,0,0,146,147,6,18,3,0,147,40,1,0,0,0,148,150,7,4,0,
0,149,148,1,0,0,0,150,151,1,0,0,0,151,149,1,0,0,0,151,152,1,0,0,0,152,157,
1,0,0,0,153,157,5,46,0,0,154,155,5,46,0,0,155,157,5,46,0,0,156,149,1,0,0,
0,156,153,1,0,0,0,156,154,1,0,0,0,157,42,1,0,0,0,158,159,3,41,19,0,159,160,
5,47,0,0,160,162,1,0,0,0,161,158,1,0,0,0,162,163,1,0,0,0,163,161,1,0,0,0,
163,164,1,0,0,0,164,165,1,0,0,0,165,166,3,41,19,0,166,44,1,0,0,0,167,171,
3,11,4,0,168,170,3,17,7,0,169,168,1,0,0,0,170,173,1,0,0,0,171,169,1,0,0,
0,171,172,1,0,0,0,172,46,1,0,0,0,173,171,1,0,0,0,20,0,1,2,74,79,84,91,95,
98,102,104,109,116,122,130,140,151,156,163,171,4,5,2,0,5,1,0,6,0,0,4,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class RunaLexer extends antlr4.Lexer {

    static grammarFileName = "RunaLexer.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE", "VARIABLE", "IMPORT_MODE" ];
	static literalNames = [ null, "'@import'", "'{'", "'}'", "':'", null, null, 
                         null, null, null, null, "'as'" ];
	static symbolicNames = [ null, "IMPORT", "LBRACE", "RBRACE", "COLON", "NUMBER", 
                          "NEWLINE", "WS", "TEXT", "VAR_IDENTIFIER", "VAR_WS", 
                          "IMPORT_AS", "IMPORT_WS", "IMPORT_NEWLINE", "IMPORT_PATH", 
                          "IMPORT_IDENTIFIER" ];
	static ruleNames = [ "IMPORT", "LBRACE", "RBRACE", "COLON", "LETTER", "DIGIT", 
                      "WHITESPACE", "IDENTIFIER_CHAR", "INTEGER", "FLOAT", 
                      "NUMBER", "NEWLINE", "WS", "TEXT", "VAR_IDENTIFIER", 
                      "VAR_WS", "IMPORT_AS", "IMPORT_WS", "IMPORT_NEWLINE", 
                      "IMPORT_PATH_PART", "IMPORT_PATH", "IMPORT_IDENTIFIER" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

RunaLexer.EOF = antlr4.Token.EOF;
RunaLexer.IMPORT = 1;
RunaLexer.LBRACE = 2;
RunaLexer.RBRACE = 3;
RunaLexer.COLON = 4;
RunaLexer.NUMBER = 5;
RunaLexer.NEWLINE = 6;
RunaLexer.WS = 7;
RunaLexer.TEXT = 8;
RunaLexer.VAR_IDENTIFIER = 9;
RunaLexer.VAR_WS = 10;
RunaLexer.IMPORT_AS = 11;
RunaLexer.IMPORT_WS = 12;
RunaLexer.IMPORT_NEWLINE = 13;
RunaLexer.IMPORT_PATH = 14;
RunaLexer.IMPORT_IDENTIFIER = 15;

RunaLexer.VARIABLE = 1;
RunaLexer.IMPORT_MODE = 2;




