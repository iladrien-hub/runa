// Generated from runa/RunaLexer.g4 by ANTLR 4.13.2
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,35,350,6,-1,6,-1,6,-1,6,-1,6,-1,6,-1,2,0,7,0,
2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,
2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,
17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,
7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,
31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,
2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,1,0,1,0,1,0,
1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,
1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,
1,9,1,9,3,9,138,8,9,1,10,4,10,141,8,10,11,10,12,10,142,1,11,5,11,146,8,11,
10,11,12,11,149,9,11,1,11,1,11,4,11,153,8,11,11,11,12,11,154,1,12,1,12,1,
12,1,13,1,13,5,13,162,8,13,10,13,12,13,165,9,13,1,14,1,14,3,14,169,8,14,
1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,3,15,180,8,15,1,16,5,16,183,
8,16,10,16,12,16,186,9,16,1,16,1,16,1,16,1,16,5,16,192,8,16,10,16,12,16,
195,9,16,1,16,1,16,3,16,199,8,16,1,16,1,16,1,17,5,17,204,8,17,10,17,12,17,
207,9,17,1,17,3,17,210,8,17,1,17,1,17,4,17,214,8,17,11,17,12,17,215,1,17,
5,17,219,8,17,10,17,12,17,222,9,17,1,18,4,18,225,8,18,11,18,12,18,226,1,
18,1,18,1,19,1,19,4,19,233,8,19,11,19,12,19,234,1,20,1,20,1,21,4,21,240,
8,21,11,21,12,21,241,1,21,1,21,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,24,1,
24,1,24,1,24,1,24,1,24,1,24,1,25,4,25,261,8,25,11,25,12,25,262,1,25,1,25,
1,26,1,26,1,26,1,26,1,27,4,27,272,8,27,11,27,12,27,273,1,27,1,27,1,27,3,
27,279,8,27,1,28,1,28,1,28,4,28,284,8,28,11,28,12,28,285,1,28,1,28,1,29,
1,29,1,30,1,30,1,31,1,31,1,32,1,32,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,
34,5,34,306,8,34,10,34,12,34,309,9,34,1,34,1,34,1,35,4,35,314,8,35,11,35,
12,35,315,1,35,1,35,1,36,1,36,1,37,1,37,4,37,324,8,37,11,37,12,37,325,1,
38,1,38,1,39,1,39,1,40,1,40,1,40,1,40,1,41,4,41,337,8,41,11,41,12,41,338,
1,41,1,41,1,42,1,42,1,42,1,42,1,43,1,43,1,44,1,44,0,0,45,6,1,8,2,10,3,12,
4,14,5,16,6,18,0,20,0,22,0,24,0,26,0,28,0,30,0,32,0,34,7,36,8,38,9,40,10,
42,0,44,11,46,12,48,13,50,14,52,15,54,16,56,17,58,18,60,0,62,19,64,20,66,
21,68,22,70,23,72,24,74,25,76,26,78,27,80,28,82,29,84,30,86,31,88,32,90,
33,92,34,94,35,6,0,1,2,3,4,5,8,2,0,65,90,97,122,1,0,48,57,2,0,9,9,32,32,
8,0,47,47,58,58,60,60,62,62,64,64,92,92,123,123,125,125,2,0,10,10,13,13,
11,0,10,10,13,13,32,32,47,47,58,58,60,60,62,62,64,64,92,92,123,123,125,125,
5,0,45,45,48,57,65,90,95,95,97,122,3,0,10,10,13,13,34,34,366,0,6,1,0,0,0,
0,8,1,0,0,0,0,10,1,0,0,0,0,12,1,0,0,0,0,14,1,0,0,0,0,16,1,0,0,0,0,34,1,0,
0,0,0,36,1,0,0,0,0,38,1,0,0,0,0,40,1,0,0,0,0,42,1,0,0,0,0,44,1,0,0,0,1,46,
1,0,0,0,1,48,1,0,0,0,1,50,1,0,0,0,2,52,1,0,0,0,2,54,1,0,0,0,2,56,1,0,0,0,
2,58,1,0,0,0,2,62,1,0,0,0,2,64,1,0,0,0,3,66,1,0,0,0,3,68,1,0,0,0,3,70,1,
0,0,0,3,72,1,0,0,0,3,74,1,0,0,0,3,76,1,0,0,0,3,78,1,0,0,0,4,80,1,0,0,0,4,
82,1,0,0,0,4,84,1,0,0,0,4,86,1,0,0,0,5,88,1,0,0,0,5,90,1,0,0,0,5,92,1,0,
0,0,5,94,1,0,0,0,6,96,1,0,0,0,8,106,1,0,0,0,10,113,1,0,0,0,12,120,1,0,0,
0,14,124,1,0,0,0,16,126,1,0,0,0,18,128,1,0,0,0,20,130,1,0,0,0,22,132,1,0,
0,0,24,137,1,0,0,0,26,140,1,0,0,0,28,147,1,0,0,0,30,156,1,0,0,0,32,159,1,
0,0,0,34,168,1,0,0,0,36,179,1,0,0,0,38,184,1,0,0,0,40,205,1,0,0,0,42,224,
1,0,0,0,44,232,1,0,0,0,46,236,1,0,0,0,48,239,1,0,0,0,50,245,1,0,0,0,52,249,
1,0,0,0,54,252,1,0,0,0,56,260,1,0,0,0,58,266,1,0,0,0,60,278,1,0,0,0,62,283,
1,0,0,0,64,289,1,0,0,0,66,291,1,0,0,0,68,293,1,0,0,0,70,295,1,0,0,0,72,297,
1,0,0,0,74,301,1,0,0,0,76,313,1,0,0,0,78,319,1,0,0,0,80,323,1,0,0,0,82,327,
1,0,0,0,84,329,1,0,0,0,86,331,1,0,0,0,88,336,1,0,0,0,90,342,1,0,0,0,92,346,
1,0,0,0,94,348,1,0,0,0,96,97,5,64,0,0,97,98,5,105,0,0,98,99,5,109,0,0,99,
100,5,112,0,0,100,101,5,111,0,0,101,102,5,114,0,0,102,103,5,116,0,0,103,
104,1,0,0,0,104,105,6,0,0,0,105,7,1,0,0,0,106,107,5,64,0,0,107,108,5,117,
0,0,108,109,5,115,0,0,109,110,5,101,0,0,110,111,1,0,0,0,111,112,6,1,1,0,
112,9,1,0,0,0,113,114,5,108,0,0,114,115,5,111,0,0,115,116,5,114,0,0,116,
117,5,97,0,0,117,118,1,0,0,0,118,119,6,2,2,0,119,11,1,0,0,0,120,121,5,123,
0,0,121,122,1,0,0,0,122,123,6,3,3,0,123,13,1,0,0,0,124,125,5,58,0,0,125,
15,1,0,0,0,126,127,5,60,0,0,127,17,1,0,0,0,128,129,7,0,0,0,129,19,1,0,0,
0,130,131,7,1,0,0,131,21,1,0,0,0,132,133,7,2,0,0,133,23,1,0,0,0,134,138,
3,18,6,0,135,138,3,20,7,0,136,138,5,95,0,0,137,134,1,0,0,0,137,135,1,0,0,
0,137,136,1,0,0,0,138,25,1,0,0,0,139,141,3,20,7,0,140,139,1,0,0,0,141,142,
1,0,0,0,142,140,1,0,0,0,142,143,1,0,0,0,143,27,1,0,0,0,144,146,3,20,7,0,
145,144,1,0,0,0,146,149,1,0,0,0,147,145,1,0,0,0,147,148,1,0,0,0,148,150,
1,0,0,0,149,147,1,0,0,0,150,152,5,46,0,0,151,153,3,20,7,0,152,151,1,0,0,
0,153,154,1,0,0,0,154,152,1,0,0,0,154,155,1,0,0,0,155,29,1,0,0,0,156,157,
5,92,0,0,157,158,7,3,0,0,158,31,1,0,0,0,159,163,3,18,6,0,160,162,3,24,9,
0,161,160,1,0,0,0,162,165,1,0,0,0,163,161,1,0,0,0,163,164,1,0,0,0,164,33,
1,0,0,0,165,163,1,0,0,0,166,169,3,26,10,0,167,169,3,28,11,0,168,166,1,0,
0,0,168,167,1,0,0,0,169,35,1,0,0,0,170,171,5,116,0,0,171,172,5,114,0,0,172,
173,5,117,0,0,173,180,5,101,0,0,174,175,5,102,0,0,175,176,5,97,0,0,176,177,
5,108,0,0,177,178,5,115,0,0,178,180,5,101,0,0,179,170,1,0,0,0,179,174,1,
0,0,0,180,37,1,0,0,0,181,183,3,22,8,0,182,181,1,0,0,0,183,186,1,0,0,0,184,
182,1,0,0,0,184,185,1,0,0,0,185,187,1,0,0,0,186,184,1,0,0,0,187,188,5,47,
0,0,188,189,5,47,0,0,189,193,1,0,0,0,190,192,8,4,0,0,191,190,1,0,0,0,192,
195,1,0,0,0,193,191,1,0,0,0,193,194,1,0,0,0,194,198,1,0,0,0,195,193,1,0,
0,0,196,199,3,40,17,0,197,199,5,0,0,1,198,196,1,0,0,0,198,197,1,0,0,0,199,
200,1,0,0,0,200,201,6,16,4,0,201,39,1,0,0,0,202,204,3,22,8,0,203,202,1,0,
0,0,204,207,1,0,0,0,205,203,1,0,0,0,205,206,1,0,0,0,206,213,1,0,0,0,207,
205,1,0,0,0,208,210,5,13,0,0,209,208,1,0,0,0,209,210,1,0,0,0,210,211,1,0,
0,0,211,214,5,10,0,0,212,214,5,13,0,0,213,209,1,0,0,0,213,212,1,0,0,0,214,
215,1,0,0,0,215,213,1,0,0,0,215,216,1,0,0,0,216,220,1,0,0,0,217,219,3,22,
8,0,218,217,1,0,0,0,219,222,1,0,0,0,220,218,1,0,0,0,220,221,1,0,0,0,221,
41,1,0,0,0,222,220,1,0,0,0,223,225,3,22,8,0,224,223,1,0,0,0,225,226,1,0,
0,0,226,224,1,0,0,0,226,227,1,0,0,0,227,228,1,0,0,0,228,229,6,18,5,0,229,
43,1,0,0,0,230,233,3,30,12,0,231,233,8,5,0,0,232,230,1,0,0,0,232,231,1,0,
0,0,233,234,1,0,0,0,234,232,1,0,0,0,234,235,1,0,0,0,235,45,1,0,0,0,236,237,
3,32,13,0,237,47,1,0,0,0,238,240,3,22,8,0,239,238,1,0,0,0,240,241,1,0,0,
0,241,239,1,0,0,0,241,242,1,0,0,0,242,243,1,0,0,0,243,244,6,21,4,0,244,49,
1,0,0,0,245,246,5,125,0,0,246,247,1,0,0,0,247,248,6,22,6,0,248,51,1,0,0,
0,249,250,5,97,0,0,250,251,5,115,0,0,251,53,1,0,0,0,252,253,5,119,0,0,253,
254,5,105,0,0,254,255,5,116,0,0,255,256,5,104,0,0,256,257,1,0,0,0,257,258,
6,24,7,0,258,55,1,0,0,0,259,261,7,2,0,0,260,259,1,0,0,0,261,262,1,0,0,0,
262,260,1,0,0,0,262,263,1,0,0,0,263,264,1,0,0,0,264,265,6,25,4,0,265,57,
1,0,0,0,266,267,3,40,17,0,267,268,1,0,0,0,268,269,6,26,6,0,269,59,1,0,0,
0,270,272,7,6,0,0,271,270,1,0,0,0,272,273,1,0,0,0,273,271,1,0,0,0,273,274,
1,0,0,0,274,279,1,0,0,0,275,279,5,46,0,0,276,277,5,46,0,0,277,279,5,46,0,
0,278,271,1,0,0,0,278,275,1,0,0,0,278,276,1,0,0,0,279,61,1,0,0,0,280,281,
3,60,27,0,281,282,5,47,0,0,282,284,1,0,0,0,283,280,1,0,0,0,284,285,1,0,0,
0,285,283,1,0,0,0,285,286,1,0,0,0,286,287,1,0,0,0,287,288,3,60,27,0,288,
63,1,0,0,0,289,290,3,32,13,0,290,65,1,0,0,0,291,292,5,58,0,0,292,67,1,0,
0,0,293,294,5,44,0,0,294,69,1,0,0,0,295,296,5,123,0,0,296,71,1,0,0,0,297,
298,5,125,0,0,298,299,1,0,0,0,299,300,6,33,6,0,300,73,1,0,0,0,301,307,5,
34,0,0,302,303,5,92,0,0,303,306,5,34,0,0,304,306,8,7,0,0,305,302,1,0,0,0,
305,304,1,0,0,0,306,309,1,0,0,0,307,305,1,0,0,0,307,308,1,0,0,0,308,310,
1,0,0,0,309,307,1,0,0,0,310,311,5,34,0,0,311,75,1,0,0,0,312,314,7,2,0,0,
313,312,1,0,0,0,314,315,1,0,0,0,315,313,1,0,0,0,315,316,1,0,0,0,316,317,
1,0,0,0,317,318,6,35,4,0,318,77,1,0,0,0,319,320,3,64,29,0,320,79,1,0,0,0,
321,324,3,24,9,0,322,324,5,45,0,0,323,321,1,0,0,0,323,322,1,0,0,0,324,325,
1,0,0,0,325,323,1,0,0,0,325,326,1,0,0,0,326,81,1,0,0,0,327,328,5,58,0,0,
328,83,1,0,0,0,329,330,3,34,14,0,330,85,1,0,0,0,331,332,5,62,0,0,332,333,
1,0,0,0,333,334,6,40,6,0,334,87,1,0,0,0,335,337,7,2,0,0,336,335,1,0,0,0,
337,338,1,0,0,0,338,336,1,0,0,0,338,339,1,0,0,0,339,340,1,0,0,0,340,341,
6,41,4,0,341,89,1,0,0,0,342,343,3,40,17,0,343,344,1,0,0,0,344,345,6,42,6,
0,345,91,1,0,0,0,346,347,3,64,29,0,347,93,1,0,0,0,348,349,3,32,13,0,349,
95,1,0,0,0,35,0,1,2,3,4,5,137,142,147,154,163,168,179,184,193,198,205,209,
213,215,220,226,232,234,241,262,273,278,285,305,307,315,323,325,338,8,5,
2,0,5,5,0,5,4,0,5,1,0,6,0,0,7,11,0,4,0,0,5,3,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class RunaLexer extends antlr4.Lexer {

    static grammarFileName = "RunaLexer.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE", "VARIABLE", "IMPORT_MODE", "IMPORT_WITH_MODE", 
                      "LORA_MODE", "USE_MODE" ];
	static literalNames = [ null, "'@import'", "'@use'", "'lora'", null, null, 
                         "'<'", null, null, null, null, null, null, null, 
                         null, "'as'", "'with'", null, null, null, null, 
                         null, "','", null, null, null, null, null, null, 
                         null, null, "'>'" ];
	static symbolicNames = [ null, "IMPORT", "USE", "LORA", "LBRACE", "COLON", 
                          "LANGLE", "NUMBER", "BOOLEAN", "COMMENT", "NEWLINE", 
                          "TEXT", "VAR_IDENTIFIER", "VAR_WS", "RBRACE", 
                          "IMPORT_AS", "IMPORT_WITH", "IMPORT_WS", "IMPORT_NEWLINE", 
                          "IMPORT_PATH", "IMPORT_IDENTIFIER", "IMPORT_WITH_COLON", 
                          "IMPORT_WITH_COMMA", "IMPORT_WITH_LBRACE", "IMPORT_WITH_RBRACE", 
                          "IMPORT_WITH_VALUE", "IMPORT_WITH_WS", "IMPORT_WITH_IDENTIFIER", 
                          "LORA_IDENTIFIER", "LORA_COLON", "LORA_NUMBER", 
                          "RANGLE", "USE_WS", "USE_NEWLINE", "USE_IDENTIFIER", 
                          "USE_NAME" ];
	static ruleNames = [ "IMPORT", "USE", "LORA", "LBRACE", "COLON", "LANGLE", 
                      "LETTER", "DIGIT", "WHITESPACE", "IDENTIFIER_CHAR", 
                      "INTEGER", "FLOAT", "ESCAPED_CHAR", "VARIABLE_NAME", 
                      "NUMBER", "BOOLEAN", "COMMENT", "NEWLINE", "WS", "TEXT", 
                      "VAR_IDENTIFIER", "VAR_WS", "RBRACE", "IMPORT_AS", 
                      "IMPORT_WITH", "IMPORT_WS", "IMPORT_NEWLINE", "IMPORT_PATH_PART", 
                      "IMPORT_PATH", "IMPORT_IDENTIFIER", "IMPORT_WITH_COLON", 
                      "IMPORT_WITH_COMMA", "IMPORT_WITH_LBRACE", "IMPORT_WITH_RBRACE", 
                      "IMPORT_WITH_VALUE", "IMPORT_WITH_WS", "IMPORT_WITH_IDENTIFIER", 
                      "LORA_IDENTIFIER", "LORA_COLON", "LORA_NUMBER", "RANGLE", 
                      "USE_WS", "USE_NEWLINE", "USE_IDENTIFIER", "USE_NAME" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

RunaLexer.EOF = antlr4.Token.EOF;
RunaLexer.IMPORT = 1;
RunaLexer.USE = 2;
RunaLexer.LORA = 3;
RunaLexer.LBRACE = 4;
RunaLexer.COLON = 5;
RunaLexer.LANGLE = 6;
RunaLexer.NUMBER = 7;
RunaLexer.BOOLEAN = 8;
RunaLexer.COMMENT = 9;
RunaLexer.NEWLINE = 10;
RunaLexer.TEXT = 11;
RunaLexer.VAR_IDENTIFIER = 12;
RunaLexer.VAR_WS = 13;
RunaLexer.RBRACE = 14;
RunaLexer.IMPORT_AS = 15;
RunaLexer.IMPORT_WITH = 16;
RunaLexer.IMPORT_WS = 17;
RunaLexer.IMPORT_NEWLINE = 18;
RunaLexer.IMPORT_PATH = 19;
RunaLexer.IMPORT_IDENTIFIER = 20;
RunaLexer.IMPORT_WITH_COLON = 21;
RunaLexer.IMPORT_WITH_COMMA = 22;
RunaLexer.IMPORT_WITH_LBRACE = 23;
RunaLexer.IMPORT_WITH_RBRACE = 24;
RunaLexer.IMPORT_WITH_VALUE = 25;
RunaLexer.IMPORT_WITH_WS = 26;
RunaLexer.IMPORT_WITH_IDENTIFIER = 27;
RunaLexer.LORA_IDENTIFIER = 28;
RunaLexer.LORA_COLON = 29;
RunaLexer.LORA_NUMBER = 30;
RunaLexer.RANGLE = 31;
RunaLexer.USE_WS = 32;
RunaLexer.USE_NEWLINE = 33;
RunaLexer.USE_IDENTIFIER = 34;
RunaLexer.USE_NAME = 35;

RunaLexer.VARIABLE = 1;
RunaLexer.IMPORT_MODE = 2;
RunaLexer.IMPORT_WITH_MODE = 3;
RunaLexer.LORA_MODE = 4;
RunaLexer.USE_MODE = 5;




