// Generated from runa/RunaLexer.g4 by ANTLR 4.13.2
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,21,247,6,-1,6,-1,6,-1,6,-1,2,0,7,0,2,1,7,1,2,
2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,
2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,
18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,
7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,3,1,3,1,4,1,4,
1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,8,3,8,99,8,8,1,9,4,9,102,8,9,11,9,12,9,
103,1,10,5,10,107,8,10,10,10,12,10,110,9,10,1,10,1,10,4,10,114,8,10,11,10,
12,10,115,1,11,1,11,1,11,1,12,1,12,3,12,123,8,12,1,13,5,13,126,8,13,10,13,
12,13,129,9,13,1,13,1,13,1,13,1,13,5,13,135,8,13,10,13,12,13,138,9,13,1,
13,1,13,3,13,142,8,13,1,13,1,13,1,14,5,14,147,8,14,10,14,12,14,150,9,14,
1,14,3,14,153,8,14,1,14,1,14,4,14,157,8,14,11,14,12,14,158,1,14,1,14,1,15,
4,15,164,8,15,11,15,12,15,165,1,15,1,15,1,16,1,16,4,16,172,8,16,11,16,12,
16,173,1,17,1,17,5,17,178,8,17,10,17,12,17,181,9,17,1,18,4,18,184,8,18,11,
18,12,18,185,1,18,1,18,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,21,4,21,198,
8,21,11,21,12,21,199,1,21,1,21,1,22,1,22,1,22,1,22,1,23,4,23,209,8,23,11,
23,12,23,210,1,23,1,23,1,23,3,23,216,8,23,1,24,1,24,1,24,4,24,221,8,24,11,
24,12,24,222,1,24,1,24,1,25,1,25,5,25,229,8,25,10,25,12,25,232,9,25,1,26,
1,26,4,26,236,8,26,11,26,12,26,237,1,27,1,27,1,28,1,28,1,29,1,29,1,29,1,
29,0,0,30,4,1,6,2,8,3,10,4,12,5,14,0,16,0,18,0,20,0,22,0,24,0,26,0,28,6,
30,7,32,8,34,0,36,9,38,10,40,11,42,12,44,13,46,14,48,15,50,0,52,16,54,17,
56,18,58,19,60,20,62,21,4,0,1,2,3,7,2,0,65,90,97,122,1,0,48,57,2,0,9,9,32,
32,8,0,47,47,58,58,60,60,62,62,64,64,92,92,123,123,125,125,2,0,10,10,13,
13,11,0,10,10,13,13,32,32,47,47,58,58,60,60,62,62,64,64,92,92,123,123,125,
125,5,0,45,45,48,57,65,90,95,95,97,122,261,0,4,1,0,0,0,0,6,1,0,0,0,0,8,1,
0,0,0,0,10,1,0,0,0,0,12,1,0,0,0,0,28,1,0,0,0,0,30,1,0,0,0,0,32,1,0,0,0,0,
34,1,0,0,0,0,36,1,0,0,0,1,38,1,0,0,0,1,40,1,0,0,0,1,42,1,0,0,0,2,44,1,0,
0,0,2,46,1,0,0,0,2,48,1,0,0,0,2,52,1,0,0,0,2,54,1,0,0,0,3,56,1,0,0,0,3,58,
1,0,0,0,3,60,1,0,0,0,3,62,1,0,0,0,4,64,1,0,0,0,6,74,1,0,0,0,8,81,1,0,0,0,
10,85,1,0,0,0,12,87,1,0,0,0,14,89,1,0,0,0,16,91,1,0,0,0,18,93,1,0,0,0,20,
98,1,0,0,0,22,101,1,0,0,0,24,108,1,0,0,0,26,117,1,0,0,0,28,122,1,0,0,0,30,
127,1,0,0,0,32,148,1,0,0,0,34,163,1,0,0,0,36,171,1,0,0,0,38,175,1,0,0,0,
40,183,1,0,0,0,42,189,1,0,0,0,44,193,1,0,0,0,46,197,1,0,0,0,48,203,1,0,0,
0,50,215,1,0,0,0,52,220,1,0,0,0,54,226,1,0,0,0,56,235,1,0,0,0,58,239,1,0,
0,0,60,241,1,0,0,0,62,243,1,0,0,0,64,65,5,64,0,0,65,66,5,105,0,0,66,67,5,
109,0,0,67,68,5,112,0,0,68,69,5,111,0,0,69,70,5,114,0,0,70,71,5,116,0,0,
71,72,1,0,0,0,72,73,6,0,0,0,73,5,1,0,0,0,74,75,5,108,0,0,75,76,5,111,0,0,
76,77,5,114,0,0,77,78,5,97,0,0,78,79,1,0,0,0,79,80,6,1,1,0,80,7,1,0,0,0,
81,82,5,123,0,0,82,83,1,0,0,0,83,84,6,2,2,0,84,9,1,0,0,0,85,86,5,58,0,0,
86,11,1,0,0,0,87,88,5,60,0,0,88,13,1,0,0,0,89,90,7,0,0,0,90,15,1,0,0,0,91,
92,7,1,0,0,92,17,1,0,0,0,93,94,7,2,0,0,94,19,1,0,0,0,95,99,3,14,5,0,96,99,
3,16,6,0,97,99,5,95,0,0,98,95,1,0,0,0,98,96,1,0,0,0,98,97,1,0,0,0,99,21,
1,0,0,0,100,102,3,16,6,0,101,100,1,0,0,0,102,103,1,0,0,0,103,101,1,0,0,0,
103,104,1,0,0,0,104,23,1,0,0,0,105,107,3,16,6,0,106,105,1,0,0,0,107,110,
1,0,0,0,108,106,1,0,0,0,108,109,1,0,0,0,109,111,1,0,0,0,110,108,1,0,0,0,
111,113,5,46,0,0,112,114,3,16,6,0,113,112,1,0,0,0,114,115,1,0,0,0,115,113,
1,0,0,0,115,116,1,0,0,0,116,25,1,0,0,0,117,118,5,92,0,0,118,119,7,3,0,0,
119,27,1,0,0,0,120,123,3,22,9,0,121,123,3,24,10,0,122,120,1,0,0,0,122,121,
1,0,0,0,123,29,1,0,0,0,124,126,3,18,7,0,125,124,1,0,0,0,126,129,1,0,0,0,
127,125,1,0,0,0,127,128,1,0,0,0,128,130,1,0,0,0,129,127,1,0,0,0,130,131,
5,47,0,0,131,132,5,47,0,0,132,136,1,0,0,0,133,135,8,4,0,0,134,133,1,0,0,
0,135,138,1,0,0,0,136,134,1,0,0,0,136,137,1,0,0,0,137,141,1,0,0,0,138,136,
1,0,0,0,139,142,3,32,14,0,140,142,5,0,0,1,141,139,1,0,0,0,141,140,1,0,0,
0,142,143,1,0,0,0,143,144,6,13,3,0,144,31,1,0,0,0,145,147,3,18,7,0,146,145,
1,0,0,0,147,150,1,0,0,0,148,146,1,0,0,0,148,149,1,0,0,0,149,156,1,0,0,0,
150,148,1,0,0,0,151,153,5,13,0,0,152,151,1,0,0,0,152,153,1,0,0,0,153,154,
1,0,0,0,154,157,5,10,0,0,155,157,5,13,0,0,156,152,1,0,0,0,156,155,1,0,0,
0,157,158,1,0,0,0,158,156,1,0,0,0,158,159,1,0,0,0,159,160,1,0,0,0,160,161,
6,14,3,0,161,33,1,0,0,0,162,164,3,18,7,0,163,162,1,0,0,0,164,165,1,0,0,0,
165,163,1,0,0,0,165,166,1,0,0,0,166,167,1,0,0,0,167,168,6,15,4,0,168,35,
1,0,0,0,169,172,3,26,11,0,170,172,8,5,0,0,171,169,1,0,0,0,171,170,1,0,0,
0,172,173,1,0,0,0,173,171,1,0,0,0,173,174,1,0,0,0,174,37,1,0,0,0,175,179,
3,14,5,0,176,178,3,20,8,0,177,176,1,0,0,0,178,181,1,0,0,0,179,177,1,0,0,
0,179,180,1,0,0,0,180,39,1,0,0,0,181,179,1,0,0,0,182,184,3,18,7,0,183,182,
1,0,0,0,184,185,1,0,0,0,185,183,1,0,0,0,185,186,1,0,0,0,186,187,1,0,0,0,
187,188,6,18,3,0,188,41,1,0,0,0,189,190,5,125,0,0,190,191,1,0,0,0,191,192,
6,19,5,0,192,43,1,0,0,0,193,194,5,97,0,0,194,195,5,115,0,0,195,45,1,0,0,
0,196,198,7,2,0,0,197,196,1,0,0,0,198,199,1,0,0,0,199,197,1,0,0,0,199,200,
1,0,0,0,200,201,1,0,0,0,201,202,6,21,3,0,202,47,1,0,0,0,203,204,3,32,14,
0,204,205,1,0,0,0,205,206,6,22,5,0,206,49,1,0,0,0,207,209,7,6,0,0,208,207,
1,0,0,0,209,210,1,0,0,0,210,208,1,0,0,0,210,211,1,0,0,0,211,216,1,0,0,0,
212,216,5,46,0,0,213,214,5,46,0,0,214,216,5,46,0,0,215,208,1,0,0,0,215,212,
1,0,0,0,215,213,1,0,0,0,216,51,1,0,0,0,217,218,3,50,23,0,218,219,5,47,0,
0,219,221,1,0,0,0,220,217,1,0,0,0,221,222,1,0,0,0,222,220,1,0,0,0,222,223,
1,0,0,0,223,224,1,0,0,0,224,225,3,50,23,0,225,53,1,0,0,0,226,230,3,14,5,
0,227,229,3,20,8,0,228,227,1,0,0,0,229,232,1,0,0,0,230,228,1,0,0,0,230,231,
1,0,0,0,231,55,1,0,0,0,232,230,1,0,0,0,233,236,3,20,8,0,234,236,5,45,0,0,
235,233,1,0,0,0,235,234,1,0,0,0,236,237,1,0,0,0,237,235,1,0,0,0,237,238,
1,0,0,0,238,57,1,0,0,0,239,240,5,58,0,0,240,59,1,0,0,0,241,242,3,28,12,0,
242,61,1,0,0,0,243,244,5,62,0,0,244,245,1,0,0,0,245,246,6,29,5,0,246,63,
1,0,0,0,28,0,1,2,3,98,103,108,115,122,127,136,141,148,152,156,158,165,171,
173,179,185,199,210,215,222,230,235,237,6,5,2,0,5,3,0,5,1,0,6,0,0,7,9,0,
4,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class RunaLexer extends antlr4.Lexer {

    static grammarFileName = "RunaLexer.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE", "VARIABLE", "IMPORT_MODE", "LORA_MODE" ];
	static literalNames = [ null, "'@import'", "'lora'", "'{'", null, "'<'", 
                         null, null, null, null, null, null, "'}'", "'as'", 
                         null, null, null, null, null, null, null, "'>'" ];
	static symbolicNames = [ null, "IMPORT", "LORA", "LBRACE", "COLON", "LANGLE", 
                          "NUMBER", "COMMENT", "NEWLINE", "TEXT", "VAR_IDENTIFIER", 
                          "VAR_WS", "RBRACE", "IMPORT_AS", "IMPORT_WS", 
                          "IMPORT_NEWLINE", "IMPORT_PATH", "IMPORT_IDENTIFIER", 
                          "LORA_IDENTIFIER", "LORA_COLON", "LORA_NUMBER", 
                          "RANGLE" ];
	static ruleNames = [ "IMPORT", "LORA", "LBRACE", "COLON", "LANGLE", "LETTER", 
                      "DIGIT", "WHITESPACE", "IDENTIFIER_CHAR", "INTEGER", 
                      "FLOAT", "ESCAPED_CHAR", "NUMBER", "COMMENT", "NEWLINE", 
                      "WS", "TEXT", "VAR_IDENTIFIER", "VAR_WS", "RBRACE", 
                      "IMPORT_AS", "IMPORT_WS", "IMPORT_NEWLINE", "IMPORT_PATH_PART", 
                      "IMPORT_PATH", "IMPORT_IDENTIFIER", "LORA_IDENTIFIER", 
                      "LORA_COLON", "LORA_NUMBER", "RANGLE" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

RunaLexer.EOF = antlr4.Token.EOF;
RunaLexer.IMPORT = 1;
RunaLexer.LORA = 2;
RunaLexer.LBRACE = 3;
RunaLexer.COLON = 4;
RunaLexer.LANGLE = 5;
RunaLexer.NUMBER = 6;
RunaLexer.COMMENT = 7;
RunaLexer.NEWLINE = 8;
RunaLexer.TEXT = 9;
RunaLexer.VAR_IDENTIFIER = 10;
RunaLexer.VAR_WS = 11;
RunaLexer.RBRACE = 12;
RunaLexer.IMPORT_AS = 13;
RunaLexer.IMPORT_WS = 14;
RunaLexer.IMPORT_NEWLINE = 15;
RunaLexer.IMPORT_PATH = 16;
RunaLexer.IMPORT_IDENTIFIER = 17;
RunaLexer.LORA_IDENTIFIER = 18;
RunaLexer.LORA_COLON = 19;
RunaLexer.LORA_NUMBER = 20;
RunaLexer.RANGLE = 21;

RunaLexer.VARIABLE = 1;
RunaLexer.IMPORT_MODE = 2;
RunaLexer.LORA_MODE = 3;




